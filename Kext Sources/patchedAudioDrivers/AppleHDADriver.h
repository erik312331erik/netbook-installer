// AppleHDADriver.h
// Generated by kext2headers

#include <IOKit/audio/IOAudioDevice.h>



class AppleHDADriver : public IOAudioDevice
	{
		OSDeclareDefaultStructors(AppleHDADriver);
	public:
		virtual void getUCState(UInt32, UInt32, UInt32, UInt32, UInt32, void*);
		virtual void setUCState(UInt32, UInt32, UInt32, UInt32, UInt32, void*);
//		virtual void newUserClient(task*, void, UInt32);
		virtual void willTerminate(IOService*);
		virtual void getUCDiagState(UInt32, UInt32, UInt32, UInt32, void*);
		virtual void idlePowerLevel(void);
		virtual void setUCDiagState(UInt32, UInt32, UInt32, UInt32, void*);
//		virtual void runPeriodicTasks(OSObject*, void, _S);
		virtual void currentPowerLevel(void);
		virtual void maximumPowerLimit(void);
//		virtual void powerChangeAction(OSObject*, void, _S);
		virtual IOReturn setAggressiveness(unsigned long type, unsigned long newLevel);
		
//		virtual void setAggressiveness(UInt32, UInt32);
		virtual void audioEngineStopped(void);
//		virtual void initHardwareAction(OSObject*, void, _S);
		virtual void loadPlatformDriver(IOService*, void*);
		virtual void setPowerProperties(UInt32, UInt32, UInt32);
		virtual void systemWillShutdown(UInt32);
		virtual void audioEngineStarting(void);
		virtual void activateAudioEngines(void);
		virtual void setPeriodicPollTimer(void);
		virtual void unloadPlatformDriver(void*);
		virtual void deletePowerProperties(void);
		virtual void setPowerStateToActive(void);
		virtual void runPolledTaskOnEngines(void);
//		virtual void performPowerStateChange(_IOAudioDevicePowerState, , UInt32*);
		virtual void selectMicInputOnPowerUp(void);
//		virtual void handleUnsolicitedResponse(OSObject*, void, _S);
//		virtual void handleUnsolicitedResponse(void*, , , );
		virtual void periodicPollTimerCallBack(OSObject*);
		virtual void protectedPowerChange_idle(_IOAudioDevicePowerState);
		virtual void protectedRunPeriodicTasks(void);
		virtual void translateTagToStatefulTag(UInt32, UInt32*);
		virtual void gatherPowerDataFromEngines(UInt32);
//		virtual void protectedPowerChangeAction(void*, , , );
//		virtual void protectedPowerChange_sleep(_IOAudioDevicePowerState);
		virtual void dispatchPowerStateToEngines(UInt32);
//		virtual void protectedPowerChange_active(_IOAudioDevicePowerState);
		virtual void setAFGPowerForJackDetection(UInt32, bool, bool);
		virtual void runPolledTaskOnFunctionGroup(void);
		virtual void updatePowerProfileProperties(void);
		virtual void scheduleDelayedIdlePowerState(void);
		virtual void sendMessageToAppleMikeyDriver(UInt32, UInt32);
		virtual void runPowerManagmentTimerForEngine(void);
		virtual void runPeriodicPollTimerEventHandler(void);
		virtual void startPowerManagementTimerForEngine(AppleHDAEngine*);
		virtual void dispatchPowerStateToAppleMikeyDriver(UInt32);
		virtual void sendHeadphoneJackStateToAppleMikeyDriver(void);
		virtual void free(void);
		virtual void logTags(UInt32, UInt32);
//		virtual void message(UInt32, IOService*, void);
	};
